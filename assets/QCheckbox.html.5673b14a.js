import{r as t,o as u,c as i,b as a,a as e,w as o,F as r,d as n,e as s}from"./app.aaa0f57b.js";import{_ as d}from"./plugin-vue_export-helper.21dcd24c.js";const h={},k=a("h1",{id:"qcheckbox",tabindex:"-1"},[a("a",{class:"header-anchor",href:"#qcheckbox","aria-hidden":"true"},"#"),n(" QCheckbox")],-1),b=n("Allows to choose one or more options. Try a sandbox "),m={href:"https://qui-max.netlify.app/?path=/story/components-qcheckbox--default",target:"_blank",rel:"noopener noreferrer"},g=n("story"),v=a("h2",{id:"examples",tabindex:"-1"},[a("a",{class:"header-anchor",href:"#examples","aria-hidden":"true"},"#"),n(" Examples")],-1),x=a("p",null,"Types:",-1),f=a("iframe",{height:"150",style:{width:"100%"},scrolling:"no",frameborder:"no",src:"/qui-max/QCheckbox/QCheckbox.html"},null,-1),_=s(`<h2 id="props" tabindex="-1"><a class="header-anchor" href="#props" aria-hidden="true">#</a> Props</h2><h3 id="label" tabindex="-1"><a class="header-anchor" href="#label" aria-hidden="true">#</a> label</h3><ul><li>type <code>string</code></li><li>default <code>null</code></li></ul><p>Defines the text of the checkbox. You could use default <a href="#slots">slot</a> instead of the <code>label</code> prop as well.</p><div class="language-vue ext-vue line-numbers-mode"><pre class="language-vue"><code><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>q-checkbox</span> <span class="token attr-name">label</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>Label<span class="token punctuation">&quot;</span></span> <span class="token punctuation">/&gt;</span></span>
</code></pre><div class="line-numbers"><span class="line-number">1</span><br></div></div>`,5),q=a("iframe",{height:"80",style:{width:"100%"},scrolling:"no",frameborder:"no",src:"/qui-max/QCheckbox/label.html"},null,-1),y=s(`<h3 id="modelvalue" tabindex="-1"><a class="header-anchor" href="#modelvalue" aria-hidden="true">#</a> modelValue</h3><ul><li>type <code>boolean</code></li><li>default <code>null</code></li></ul><div class="language-vue ext-vue line-numbers-mode"><pre class="language-vue"><code><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>q-checkbox</span> <span class="token attr-name">v-model</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>model<span class="token punctuation">&quot;</span></span> <span class="token punctuation">/&gt;</span></span>
</code></pre><div class="line-numbers"><span class="line-number">1</span><br></div></div>`,3),w=a("iframe",{height:"80",style:{width:"100%"},scrolling:"no",frameborder:"no",src:"/qui-max/QCheckbox/model.html"},null,-1),C=s(`<h3 id="indeterminate" tabindex="-1"><a class="header-anchor" href="#indeterminate" aria-hidden="true">#</a> indeterminate</h3><ul><li>type <code>boolean</code></li><li>default <code>false</code></li></ul><p>Defines the checkbox indeterminacy</p><div class="language-vue ext-vue line-numbers-mode"><pre class="language-vue"><code><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>q-checkbox</span> <span class="token attr-name">indeterminate</span> <span class="token punctuation">/&gt;</span></span>
</code></pre><div class="line-numbers"><span class="line-number">1</span><br></div></div><p>Result:</p>`,5),Q=a("iframe",{height:"80",style:{width:"100%"},scrolling:"no",frameborder:"no",src:"/qui-max/QCheckbox/indeterminate.html"},null,-1),E=s(`<h3 id="disabled" tabindex="-1"><a class="header-anchor" href="#disabled" aria-hidden="true">#</a> disabled</h3><ul><li>type <code>boolean</code></li><li>default <code>false</code></li></ul><p>Sets disabled checkbox state</p><div class="language-vue ext-vue line-numbers-mode"><pre class="language-vue"><code><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>q-checkbox</span> <span class="token attr-name">disabled</span> <span class="token punctuation">/&gt;</span></span>
</code></pre><div class="line-numbers"><span class="line-number">1</span><br></div></div><p>Result:</p>`,5),I=a("iframe",{height:"80",style:{width:"100%"},scrolling:"no",frameborder:"no",src:"/qui-max/QCheckbox/disabled.html"},null,-1),G=s(`<h3 id="roottag" tabindex="-1"><a class="header-anchor" href="#roottag" aria-hidden="true">#</a> rootTag</h3><ul><li>type <code>string</code></li><li>default <code>label</code></li></ul><p>Sets custom root tag</p><div class="language-vue ext-vue line-numbers-mode"><pre class="language-vue"><code><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>q-checkbox</span> <span class="token attr-name">root-tag</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>div<span class="token punctuation">&quot;</span></span> <span class="token punctuation">/&gt;</span></span>
</code></pre><div class="line-numbers"><span class="line-number">1</span><br></div></div><h3 id="validateevent" tabindex="-1"><a class="header-anchor" href="#validateevent" aria-hidden="true">#</a> validateEvent</h3><ul><li>type <code>boolean</code></li><li>default <code>false</code></li></ul><p>If checkbox wrapped in <code>QFormItem</code>, prop <code>validateEvent</code> defines if checkbox <code>change</code> event will be validated immediately</p><p>Code Example</p><div class="language-vue ext-vue line-numbers-mode"><pre class="language-vue"><code><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>q-form</span> <span class="token attr-name">:model</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>model<span class="token punctuation">&quot;</span></span> <span class="token attr-name">:rules</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>rules<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>
  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>q-form-item</span> <span class="token attr-name">prop</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>checkbox<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>q-checkbox</span>
        <span class="token attr-name">v-model</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>model.checkbox<span class="token punctuation">&quot;</span></span>
        <span class="token attr-name">label</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>Required checkbox<span class="token punctuation">&quot;</span></span>
        <span class="token attr-name">validate-event</span>
    <span class="token punctuation">/&gt;</span></span>
  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>q-form-item</span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>q-form</span><span class="token punctuation">&gt;</span></span>
</code></pre><div class="highlight-lines"><br><br><br><br><br><div class="highlight-line">\xA0</div><br><br><br></div><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br></div></div><p>Result</p>`,10),V=a("iframe",{height:"80",style:{width:"100%"},scrolling:"no",frameborder:"no",src:"/qui-max/QCheckbox/validate.html"},null,-1),S=s(`<h2 id="events" tabindex="-1"><a class="header-anchor" href="#events" aria-hidden="true">#</a> Events</h2><h3 id="update-modelvalue" tabindex="-1"><a class="header-anchor" href="#update-modelvalue" aria-hidden="true">#</a> update:modelValue</h3><p>Triggers when the model is being updated</p><h3 id="change" tabindex="-1"><a class="header-anchor" href="#change" aria-hidden="true">#</a> change</h3><p>Alias for <a href="#update-modelvalue">update:modelValue</a></p><p>In template:</p><div class="language-vue ext-vue line-numbers-mode"><pre class="language-vue"><code><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>q-checkbox</span> <span class="token attr-name">v-model</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>model<span class="token punctuation">&quot;</span></span> <span class="token attr-name">@change</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>changeHandler<span class="token punctuation">&quot;</span></span> <span class="token punctuation">/&gt;</span></span>
</code></pre><div class="line-numbers"><span class="line-number">1</span><br></div></div><p>In setup:</p>`,8),T=a("div",{class:"language-javascript ext-js line-numbers-mode"},[a("pre",{class:"language-javascript"},[a("code",null,[a("span",{class:"token function"},"setup"),a("span",{class:"token punctuation"},"("),a("span",{class:"token punctuation"},")"),n(),a("span",{class:"token punctuation"},"{"),n(`
    `),a("span",{class:"token keyword"},"const"),n(" model "),a("span",{class:"token operator"},"="),n(),a("span",{class:"token function"},"ref"),a("span",{class:"token punctuation"},"("),a("span",{class:"token boolean"},"false"),a("span",{class:"token punctuation"},")"),a("span",{class:"token punctuation"},";"),n(`

    `),a("span",{class:"token keyword"},"const"),n(),a("span",{class:"token function-variable function"},"changeHandler"),n(),a("span",{class:"token operator"},"="),n(),a("span",{class:"token punctuation"},"("),a("span",{class:"token parameter"},"value"),a("span",{class:"token punctuation"},")"),n(),a("span",{class:"token operator"},"=>"),n(),a("span",{class:"token punctuation"},"{"),n(`
        `),a("span",{class:"token comment"},"// do something with new value"),n(`
    `),a("span",{class:"token punctuation"},"}"),n(`

    `),a("span",{class:"token keyword"},"return"),n(),a("span",{class:"token punctuation"},"{"),n(" model"),a("span",{class:"token punctuation"},","),n(" changeHandler "),a("span",{class:"token punctuation"},"}"),n(`
`),a("span",{class:"token punctuation"},"}"),n(`
`)])]),a("div",{class:"line-numbers"},[a("span",{class:"line-number"},"1"),a("br"),a("span",{class:"line-number"},"2"),a("br"),a("span",{class:"line-number"},"3"),a("br"),a("span",{class:"line-number"},"4"),a("br"),a("span",{class:"line-number"},"5"),a("br"),a("span",{class:"line-number"},"6"),a("br"),a("span",{class:"line-number"},"7"),a("br"),a("span",{class:"line-number"},"8"),a("br"),a("span",{class:"line-number"},"9"),a("br")])],-1),j=a("div",{class:"language-typescript ext-ts line-numbers-mode"},[a("pre",{class:"language-typescript"},[a("code",null,[a("span",{class:"token function"},"setup"),a("span",{class:"token punctuation"},"("),a("span",{class:"token punctuation"},")"),n(),a("span",{class:"token punctuation"},"{"),n(`
    `),a("span",{class:"token keyword"},"const"),n(" model "),a("span",{class:"token operator"},"="),n(),a("span",{class:"token generic-function"},[a("span",{class:"token function"},"ref"),a("span",{class:"token generic class-name"},[a("span",{class:"token operator"},"<"),a("span",{class:"token builtin"},"boolean"),a("span",{class:"token operator"},">")])]),a("span",{class:"token punctuation"},"("),a("span",{class:"token boolean"},"false"),a("span",{class:"token punctuation"},")"),a("span",{class:"token punctuation"},";"),n(`

    `),a("span",{class:"token keyword"},"const"),n(" changeHandler "),a("span",{class:"token operator"},"="),n(),a("span",{class:"token punctuation"},"("),n("value"),a("span",{class:"token operator"},":"),n(),a("span",{class:"token builtin"},"boolean"),a("span",{class:"token punctuation"},")"),a("span",{class:"token operator"},":"),n(),a("span",{class:"token keyword"},"void"),n(),a("span",{class:"token operator"},"=>"),n(),a("span",{class:"token punctuation"},"{"),n(`
        `),a("span",{class:"token comment"},"// do something with new value"),n(`
    `),a("span",{class:"token punctuation"},"}"),n(`

    `),a("span",{class:"token keyword"},"return"),n(),a("span",{class:"token punctuation"},"{"),n(" model"),a("span",{class:"token punctuation"},","),n(" changeHandler "),a("span",{class:"token punctuation"},"}"),n(`
`),a("span",{class:"token punctuation"},"}"),n(`
`)])]),a("div",{class:"line-numbers"},[a("span",{class:"line-number"},"1"),a("br"),a("span",{class:"line-number"},"2"),a("br"),a("span",{class:"line-number"},"3"),a("br"),a("span",{class:"line-number"},"4"),a("br"),a("span",{class:"line-number"},"5"),a("br"),a("span",{class:"line-number"},"6"),a("br"),a("span",{class:"line-number"},"7"),a("br"),a("span",{class:"line-number"},"8"),a("br"),a("span",{class:"line-number"},"9"),a("br")])],-1),H=s(`<h2 id="slots" tabindex="-1"><a class="header-anchor" href="#slots" aria-hidden="true">#</a> Slots</h2><h3 id="default" tabindex="-1"><a class="header-anchor" href="#default" aria-hidden="true">#</a> Default</h3><p>Defines the text of the checkbox label, like <a href="#label">label</a> prop does. Just put the label text between QCheckbox tags.</p><div class="language-vue ext-vue line-numbers-mode"><pre class="language-vue"><code><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>q-checkbox</span><span class="token punctuation">&gt;</span></span>Label<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>q-checkbox</span><span class="token punctuation">&gt;</span></span>
</code></pre><div class="line-numbers"><span class="line-number">1</span><br></div></div>`,4),D=a("iframe",{height:"80",style:{width:"100%"},scrolling:"no",frameborder:"no",src:"/qui-max/QCheckbox/label.html"},null,-1),L=a("h2",{id:"qcheckboxgroup",tabindex:"-1"},[a("a",{class:"header-anchor",href:"#qcheckboxgroup","aria-hidden":"true"},"#"),n(" QCheckboxGroup")],-1),N=a("p",null,[n("You also could wrap a several QCheckboxes in a group using "),a("a",{href:"/qui-max/components/QCheckboxGroup"},"QCheckboxGroup"),n(".")],-1);function R(B,F){const c=t("ExternalLinkIcon"),l=t("CodeGroupItem"),p=t("CodeGroup");return u(),i(r,null,[k,a("p",null,[b,a("a",m,[g,e(c)])]),v,x,f,_,q,y,w,C,Q,E,I,G,V,S,e(p,null,{default:o(()=>[e(l,{title:"JS"},{default:o(()=>[T]),_:1}),e(l,{title:"TS"},{default:o(()=>[j]),_:1})]),_:1}),H,D,L,N],64)}var Y=d(h,[["render",R]]);export{Y as default};
